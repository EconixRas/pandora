
nameProgram = 'analysis'

srcFiles = Split('main.cxx')

import os, sys
from subprocess import call

pandoraPath = os.getenv('PANDORAPATH', '/usr/local/pandora')
sys.path.append(pandoraPath+'/bin')

srcFiles += [pandoraPath+'/utils/MpiStubCode.cxx']

release = ARGUMENTS.get('release', 1)
extremeDebug = ARGUMENTS.get('edebug', 0)
env = Environment(ENV=os.environ, CXX='mpicxx')

linkFlags = Split('-fopenmp')
libs = Split('tinyxml pthread')

if int(release) == 0:
	env['CCFLAGS'] = '-std=c++0x -g -O0 -Wall -DTIXML_USE_STL -fopenmp -DPANDORADEBUG'.split()
	if int(extremeDebug)==1:
		env['CCFLAGS'] += ['-DPANDORAEDEBUG']
	libs += ['pandorad']
else:
	env['CCFLAGS'] = '''-std=c++0x -O3 -DTIXML_USE_STL -fopenmp'''.split()
	libs += ['pandora']

includeDirs = ['.', '/usr/local/include','/usr/local/hdf5/include','/usr/include/gdal/', pandoraPath+'/include']
libDirs = Split('../../ /usr/local/lib /usr/local/hdf5/lib/ '+pandoraPath+'/lib')
libs += ['mpl']

env.Program(nameProgram, srcFiles, CPPPATH=includeDirs, LIBS=libs, LIBPATH=libDirs, LINKFLAGS=linkFlags)

