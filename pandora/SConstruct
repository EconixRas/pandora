
import os

release = ARGUMENTS.get('release', 1)
extremeDebug = ARGUMENTS.get('edebug', 0)

env = Environment(ENV=os.environ, CXX='mpicxx')
hdf5_path = os.environ.get('HDF5_PATH', '/usr/local/hdf5')

env.VariantDir('build', '.')

libs = Split('pthread gdal hdf5 z tinyxml boost_filesystem boost_system boost_timer boost_chrono gomp mpl dl')

if int(release) == 0:
	env['CCFLAGS'] = Split('-std=c++0x -g -Wall -DTIXML_USE_STL -fopenmp -DPANDORADEBUG')
	if int(extremeDebug)==1:
		env['CCFLAGS'] += ['-DPANDORAEDEBUG']
	libraryName = 'pandorad'
	pythonLibraryName = 'pyPandorad'
else:
	env['CCFLAGS'] = Split('-Ofast -DTIXML_USE_STL -fopenmp -std=c++0x ')
	libraryName = 'pandora'
	pythonLibraryName = 'pyPandora'

coreFiles = [str(f) for f in Glob('*.cxx') if str(f) != 'MpiStubCode.cxx']
analysisFiles = [str(f) for f in Glob('analysis/*.cxx')]
srcFiles = coreFiles + analysisFiles

srcBaseFiles = ['build/' + src for src in srcFiles]
includeDirs = ['.', 'analysis/', '/usr/local/include', hdf5_path + '/include', '/usr/include/gdal/']
libDirs = ['.', '/usr/local/lib', hdf5_path + '/lib']

env.SharedLibrary(libraryName, srcBaseFiles, CPPPATH=includeDirs, LIBS=libs, LIBPATH=libDirs)


envPython = Environment(ENV=os.environ, CXX='mpicxx')
envPython['LINKFLAGS'] = Split('-Wl,--export-dynamic,-no-undefined')
envPython['LIBPATH'] = libDirs
envPython['LIBPATH'] += ['/usr/lib/python3.3/config-3.3m-x86_64-linux-gnu/']
envPython.VariantDir('build_py', '.')

if int(release) == 0:
	envPython['CCFLAGS'] = Split('-g -Wall -DTIXML_USE_STL -DPANDORADEBUG')	
	if int(extremeDebug)==1:
		envPython['CCFLAGS'] += ['-DPANDORAEDEBUG']
else:
	envPython['CCFLAGS'] = Split('-Ofast -DTIXML_USE_STL')

srcPyFiles = ['build_py/' + src for src in srcFiles]
srcPyFiles.append('build_py/pyPandora/pyBindings.cxx')
srcPyFiles.append('build_py/MpiStubCode.cxx')

libsPython = libs
includeDirsPython = ['']

conf = Configure(envPython)
if conf.CheckLib('python3.3'):
	libsPython += ['boost_python-py33']
	libsPython += ['python3.3m']
	includeDirsPython = ['/usr/include/python3.3/']
elif conf.CheckLib('python3.2mu'):
	libsPython += ['boost_python-py32']
	libsPython += ['python3.2mu']	
	includeDirsPython = ['/usr/include/python3.2/']
else:
	# default, python 2.7
	libsPython += ['boost_python-py27']
	libsPython += ['python2.7']
	includeDirsPython = ['/usr/include/python2.7/']

includeDirsPython += includeDirs
envPython = conf.Finish()
envPython.SharedLibrary(pythonLibraryName, srcPyFiles, CPPPATH=includeDirsPython, LIBS=libsPython)

